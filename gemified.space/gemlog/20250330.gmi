=> ../index.gmi gemified.space Home
=> ./index.gmi My Gemlog

# It's working, I think

Last time I wrote about some difficulties I was having with unexpeted "I/O Timeout" errors while
running my capsule on my Raspberry Pi Zero 2 W.

=> 20250328.gmi That post is here.

I think I've got it sorted for the most part, and in case anyone else runs into those troubles,
I'm going to document what I did to mostly deal with it here.

## The Setup

Let's get into some details about my setup.

=> https://github.com/darthlukan/gemified.space gemified.space github repo [https]

My capsule content and a simple `Makefile` which can build and execute a pretty vanilla `Dockerfile`
into a sane container image holding the `agate` gemini server all live in that git repo. As time
goes on I'll probably include ways to more completely automate the process of provisioning an 
RPI Zero 2 W with all of the needful, inclusive of a simple `systemd` service file, but for now, 
it serves my purposes.

The Domain registration and DNS provider is CloudFlare. CloudFlare does not support Gemini natively
and this caused some head-aches at first as their default DNS setup enables "Cloudflare Proxy"-ing
which is only useful for `HTTP(S)`. I needed to disable this so that I'd have a "grey cloud" - the
"DNS Only" configuration. I pointed my domain via `A` record to my home's public IP address, set up
port-forwarding from my ISP-provided modem to my mesh router, and then set another port-forwarding
rule from the mesh router to my RPi Zero 2 W, as well as pinned the IP address so that I wouldn't
have to change that port-forward rule again and confirmed I could hit the Pi on the desired port - 
`1965`.

An implementation detail that I think is important to call out because it may not be apparent at
first: I set up the rules so that only ports 1965 and 853 are forwarded. All other incoming traffic 
to my home network and Pi are closed.

I also set a rule in CloudFlare to convert any request to my domain to be redirected to port 1965.
I'm not 100% convinced that is needed, but it's there, things seem to work, so I'm going with it.
As I'm not ever intending to serve this space up via any other protocol, limiting everything to
the one port shouldn't matter.

Continuing with the Cloudflare setup, I set the SSL configuration to "full", not "full (strict)",
and not "flexible", which was the default - "full". This allows me to use the self-signed cert
pair generated by `agate` between Cloudflare and my RPi Zero 2, and Cloudflares cert from any
clients to Cloudflare's DNS, not that it's needed for Gemini traffic. Again, it appears to work
so I'm going with it.

You'll notice the commit history in my git repo for gemified.space includes a shift from explicit
direct links to content on my capsule, to relative links. I don't know what it is, but this seems
to help in gemini clients not getting "I/O Timeout". I don't know why, but again, working so not
messing with it. Maybe one day I'll decide to dig deeper into the Rust code of `agate`, especially
since it's in "maintenance mode" (but the author is kind enough to still keep dependencies
up-to-date and accept security patches), but for now, I'm content.

## The Result

Things seem a bit more consistently stable and performant. I'm still in early days of using
gemini and learning its quirks and nuances, and of course in interacting with gemini space.
I'm willing to bet that when it's all said and done the issue is either on my home network or
in how Podman sets up the default container network. Either way, given all of the above, I'm 
certain the issue is something simple that I've just overlooked.

In any case, the capsule is up, it serves content most of the time, and it's been a fun foray into
gemini space.


Tailwinds and 72
- Brian
